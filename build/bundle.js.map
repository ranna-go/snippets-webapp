{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/store.ts","../../node_modules/@ranna-go/ranna-ts/dist/errors.js","../../node_modules/@ranna-go/ranna-ts/dist/request.js","../../node_modules/@ranna-go/ranna-ts/dist/client.js","../../node_modules/@ranna-go/ranna-ts/dist/snippets.js","../../node_modules/@ranna-go/ranna-ts/dist/index.js","../../src/localstorage.ts","../../src/client.ts","../../src/components/Login.svelte","../../src/colors.ts","../../node_modules/dateformat/lib/dateformat.js","../../src/components/Snippet.svelte","../../src/util.ts","../../src/components/ApiKey.svelte","../../src/components/MasterKey.svelte","../../src/components/Home.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\nexport const masterKey = writable('');\nexport const apiKey = writable('');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResponseError = exports.APIError = void 0;\nclass APIError extends Error {\n    constructor(res) {\n        super(res.error);\n        this._code = res.code;\n        this._error = res.error;\n        this._context = res.context;\n    }\n    get code() {\n        return this._code;\n    }\n    get error() {\n        return this._error;\n    }\n    get context() {\n        return this._context;\n    }\n}\nexports.APIError = APIError;\nclass ResponseError extends Error {\n    constructor(res) {\n        super(`request failed: ${res.status}`);\n        this._response = res;\n    }\n    get response() {\n        return this._response;\n    }\n}\nexports.ResponseError = ResponseError;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestClient = void 0;\nconst errors_1 = require(\"./errors\");\nclass RequestClient {\n    constructor(endpoint, options) {\n        this.endpoint = endpoint;\n        this.options = options;\n    }\n    request(method, path, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const headers = new Headers();\n            headers.set('Content-Type', 'application/json');\n            headers.set('Accept', 'application/json');\n            if (this.options.auth)\n                headers.set('Authorization', this.options.auth);\n            if (this.options.userAgent)\n                headers.set('User-Agent', this.options.userAgent);\n            const res = yield window.fetch(`${this.endpoint}/${this.options.version}/${path}`, {\n                method,\n                headers,\n                body: body ? JSON.stringify(body) : null,\n                credentials: this.options.auth ? 'include' : 'omit',\n            });\n            if (res.status === 204) {\n                return {};\n            }\n            if (!res.ok) {\n                try {\n                    const data = yield res.json();\n                    throw new errors_1.APIError(data);\n                }\n                catch (_a) {\n                    throw new errors_1.ResponseError(res);\n                }\n            }\n            return res.json();\n        });\n    }\n    get clientOptions() {\n        return this.options;\n    }\n}\nexports.RequestClient = RequestClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst request_1 = require(\"./request\");\nconst defaultOptions = {\n    version: 'v1',\n    userAgent: 'ranna-ts',\n    auth: null,\n};\n/**\n * Request client to perform API requests with.\n */\nclass Client extends request_1.RequestClient {\n    /**\n     * Initialize a new client connected to the passed ranna\n     * server endpoint.\n     *\n     * You can specify additional options like the API version\n     * (default 'v1'), the user agent header or the authorization\n     * header, if required.\n     *\n     * @param endpoint The ranna server endpoint.\n     * @param options Additional options.\n     */\n    constructor(endpoint, options = defaultOptions) {\n        super(endpoint, options);\n    }\n    /**\n     * Request the available spec map.\n     * @returns SpecMap\n     */\n    spec() {\n        return this.request('GET', 'spec');\n    }\n    /**\n     * Execute code.\n     * @param req Execution request\n     * @returns Execution response\n     */\n    exec(req, bypassCache = false) {\n        return this.request('POST', `exec?bypass_cache=${bypassCache}`, req);\n    }\n    /**\n     * Request service information.\n     * @returns\n     */\n    info() {\n        return this.request('GET', 'info');\n    }\n}\nexports.Client = Client;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnippetsClient = void 0;\nconst request_1 = require(\"./request\");\nconst defaultOptions = {\n    version: 'v1',\n    userAgent: 'ranna-ts',\n    auth: null,\n};\n/**\n * Request client to perform API requests\n * against the snippet API.\n */\nclass SnippetsClient extends request_1.RequestClient {\n    /**\n     * Initialize a new client connected to the passed ranna\n     * server endpoint.\n     *\n     * You can specify additional options like the API version\n     * (default 'v1'), the user agent header or the authorization\n     * header, if required.\n     *\n     * @param endpoint The ranna snippets server endpoint.\n     * @param options Additional options.\n     */\n    constructor(endpoint, options = defaultOptions) {\n        super(endpoint, options);\n    }\n    /**\n     * Creaates an account with the given username and returns\n     * the account properties including the account master key.\n     *\n     * This masterkey is exchanged againbst an API key later,\n     * which can be reviewed and regenerated. Also, the master\n     * key is required to delete an account.\n     *\n     * The masterkey is only shown ONCE at account creation\n     * and CAN NOT BE REVIEWED AGAIN AFTER THAT!\n     *\n     * @param username\n     * @returns\n     */\n    createAccount(username) {\n        return this.request('PUT', `users/${username}`);\n    }\n    /**\n     * Exchanges the passed master key for the passed username\n     * against an API key which is used for subsequent requests.\n     *\n     * The API key can also be regenerated using this endpoint\n     * if already existent.\n     *\n     * You can set `store` to true to stroe the received API\n     * key in the request client.\n     *\n     * @param username\n     * @param masterkey\n     * @param store\n     * @returns\n     */\n    exchangeAPIToken(username, masterkey, store = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.clientOptions.auth = 'bearer ' + masterkey;\n            let res = null;\n            try {\n                res = yield this.request('POST', `users/${username}/apitoken`);\n                return res;\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                if (store && !!res)\n                    this.clientOptions.auth = 'bearer ' + res.token;\n                else\n                    this.clientOptions.auth = null;\n            }\n        });\n    }\n    /**\n     * Deletes the user wtih the passed username if the passed\n     * masterkey matches the account.\n     *\n     * @param username\n     * @param masterkey\n     * @returns\n     */\n    deleteAccount(username, masterkey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.clientOptions.auth = 'bearer ' + masterkey;\n            let res = null;\n            try {\n                res = yield this.request('DELETE', `users/${username}`);\n                return res;\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                this.clientOptions.auth = null;\n            }\n        });\n    }\n    /**\n     * Returns a list of snippets belonging to the\n     * authorized account.\n     *\n     * This endpoijt must be authorized with an API\n     * token.\n     *\n     * @returns\n     */\n    list() {\n        return this.request('GET', 'snippets');\n    }\n    /**\n     * Reqeusts a sinlie snippet by ident or id.\n     * @param ident\n     * @returns\n     */\n    get(ident) {\n        return this.request('GET', `snippets/${ident}`);\n    }\n    /**\n     * Creates a new snippet with the passed content.\n     * @param snippet\n     * @returns\n     */\n    create(snippet) {\n        return this.request('POST', 'snippets', snippet);\n    }\n    /**\n     * Deletes a snipped by its ident or ID.\n     *\n     * This endpoint required authorization by the owner of\n     * the snippet. If the snippet was created anonymously,\n     * it can not be deleted!\n     *\n     * @param ident\n     * @returns\n     */\n    delete(ident) {\n        return this.request('DELETE', `snippets/${ident}`);\n    }\n}\nexports.SnippetsClient = SnippetsClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnippetsClient = exports.ResponseError = exports.APIError = exports.Client = void 0;\nvar client_1 = require(\"./client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return client_1.Client; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"APIError\", { enumerable: true, get: function () { return errors_1.APIError; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return errors_1.ResponseError; } });\nvar snippets_1 = require(\"./snippets\");\nObject.defineProperty(exports, \"SnippetsClient\", { enumerable: true, get: function () { return snippets_1.SnippetsClient; } });\n","export default class LocalStorageUtil {\n    static set(key, val) {\n        window.localStorage.setItem(key, JSON.stringify(val));\n    }\n    static get(key, def) {\n        const valStr = window.localStorage.getItem(key);\n        if (valStr)\n            return JSON.parse(valStr);\n        return def;\n    }\n    static del(key) {\n        window.localStorage.removeItem(key);\n    }\n}\n","import { SnippetsClient } from '@ranna-go/ranna-ts';\nimport LocalStorageUtil from './localstorage';\nimport { apiKey } from './store';\nexport const client = new SnippetsClient(process.env.snippetsEndpoint);\nconst key = LocalStorageUtil.get('apikey');\nif (key) {\n    apiKey.set(key);\n    client.clientOptions.auth = 'bearer ' + key;\n}\n","<script lang=\"ts\">\n  import { client } from '../client';\n  import LocalStorageUtil from '../localstorage';\n  import { masterKey, apiKey } from '../store';\n\n  let selected = 0;\n\n  let username = '';\n  let key = '';\n  let remember = false;\n\n  async function onLogin() {\n    const res = await client.exchangeAPIToken(username, key);\n    apiKey.set(res.token);\n    if (remember) LocalStorageUtil.set('apikey', res.token);\n  }\n\n  async function onRegister() {\n    const res = await client.createAccount(username);\n    key = res.masterkey;\n    masterKey.set(res.masterkey);\n    await onLogin();\n  }\n</script>\n\n<main>\n  <div class=\"wrapper\">\n    <div class=\"container\">\n      <div class=\"head\">\n        <span class:active={selected === 0} on:click={() => (selected = 0)}\n          >REGISTER</span\n        >\n        <span class:active={selected === 1} on:click={() => (selected = 1)}\n          >LOGIN</span\n        >\n      </div>\n      <div class=\"body\">\n        {#if selected === 0}\n          <label for=\"username\">Username</label>\n          <input id=\"username\" bind:value={username} autocomplete=\"off\" />\n          <button disabled={!username} on:click={() => onRegister()}\n            >REGISTER</button\n          >\n        {:else}\n          <label for=\"username\">Username</label>\n          <input id=\"username\" bind:value={username} autocomplete=\"off\" />\n          <label for=\"masterkey\">Master Key</label>\n          <input id=\"masterkey\" type=\"password\" bind:value={key} />\n          <input id=\"cb-save-creds\" type=\"checkbox\" bind:checked={remember} />\n          <label for=\"cb-save-creds\">Store Credentials</label>\n          <button disabled={!username || !key} on:click={() => onLogin()}\n            >LOGIN</button\n          >\n        {/if}\n      </div>\n    </div>\n  </div>\n</main>\n\n<style lang=\"scss\">\n  @import '../styles/mixins.scss';\n\n  input,\n  label,\n  button {\n    display: block;\n    width: 100%;\n  }\n\n  input {\n    margin-bottom: 20px;\n  }\n\n  label[for^='cb'],\n  input[type='checkbox'] {\n    display: inline;\n    width: fit-content;\n  }\n\n  label {\n    margin-bottom: 10px;\n  }\n\n  .wrapper {\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n\n    .container {\n      margin: 20vh auto auto auto;\n      width: 90vw;\n      max-width: 400px;\n      border-radius: 10px;\n      overflow: hidden;\n      background-color: #001419;\n      @include shadow;\n\n      .head {\n        display: flex;\n        background-color: darken(#001419, 1);\n\n        > span {\n          padding: 20px 0;\n          text-align: center;\n          width: 50%;\n          color: white;\n          cursor: pointer;\n          transition: all 0.2s ease;\n\n          &:hover {\n            background-color: rgba(#03a9f4, 0.2);\n          }\n\n          &.active {\n            background-color: #03a9f4;\n          }\n        }\n      }\n\n      .body {\n        padding: 20px;\n      }\n    }\n  }\n</style>\n","const languageColors = {\n    golang: '#375eab',\n    go: '#375eab',\n    python3: '#3572A5',\n    python: '#3572A5',\n    py: '#3572A5',\n    rust: '#dea584',\n    'openjdk-11': '#b07219',\n    java: '#b07219',\n    node: '#f1e05a',\n    javascript: '#f1e05a',\n    js: '#f1e05a',\n    deno: '#2b7489',\n    typescript: '#2b7489',\n    ts: '#2b7489',\n    elixir: '#6e4a7e',\n    ash: '#89e051',\n    bash: '#89e051',\n    sh: '#89e051',\n    brainfuck: '#2F2530',\n    cpp: '#f34b7d',\n    'c++': '#f34b7d',\n    c: '#555555',\n    mono: '#178600',\n    'c#': '#178600',\n    csharp: '#178600',\n    'dotnet-script': '#178600',\n    csx: '#178600',\n    php: '#4F5D95',\n    ruby: '#701516',\n    haskell: '#29b544',\n    dart: '#00B4AB',\n    pascal: '#b0ce4e',\n    fpc: '#b0ce4e',\n};\nexport function languageColor(lang) {\n    var _a;\n    return (_a = languageColors[lang.toLowerCase()]) !== null && _a !== void 0 ? _a : '#ffffff';\n}\n","\"use strict\";function _typeof(obj){\"@babel/helpers - typeof\";if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj}}return _typeof(obj)}(function(global){var _arguments=arguments;var dateFormat=function(){var token=/d{1,4}|D{3,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|W{1,2}|[LlopSZN]|\"[^\"]*\"|'[^']*'/g;var timezone=/\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;var timezoneClip=/[^-+\\dA-Z]/g;return function(date,mask,utc,gmt){if(_arguments.length===1&&kindOf(date)===\"string\"&&!/\\d/.test(date)){mask=date;date=undefined}date=date||date===0?date:new Date;if(!(date instanceof Date)){date=new Date(date)}if(isNaN(date)){throw TypeError(\"Invalid date\")}mask=String(dateFormat.masks[mask]||mask||dateFormat.masks[\"default\"]);var maskSlice=mask.slice(0,4);if(maskSlice===\"UTC:\"||maskSlice===\"GMT:\"){mask=mask.slice(4);utc=true;if(maskSlice===\"GMT:\"){gmt=true}}var _=function _(){return utc?\"getUTC\":\"get\"};var _d=function d(){return date[_()+\"Date\"]()};var D=function D(){return date[_()+\"Day\"]()};var _m=function m(){return date[_()+\"Month\"]()};var y=function y(){return date[_()+\"FullYear\"]()};var _H=function H(){return date[_()+\"Hours\"]()};var _M=function M(){return date[_()+\"Minutes\"]()};var _s=function s(){return date[_()+\"Seconds\"]()};var _L=function L(){return date[_()+\"Milliseconds\"]()};var _o=function o(){return utc?0:date.getTimezoneOffset()};var _W=function W(){return getWeek(date)};var _N=function N(){return getDayOfWeek(date)};var flags={d:function d(){return _d()},dd:function dd(){return pad(_d())},ddd:function ddd(){return dateFormat.i18n.dayNames[D()]},DDD:function DDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:dateFormat.i18n.dayNames[D()],short:true})},dddd:function dddd(){return dateFormat.i18n.dayNames[D()+7]},DDDD:function DDDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:dateFormat.i18n.dayNames[D()+7]})},m:function m(){return _m()+1},mm:function mm(){return pad(_m()+1)},mmm:function mmm(){return dateFormat.i18n.monthNames[_m()]},mmmm:function mmmm(){return dateFormat.i18n.monthNames[_m()+12]},yy:function yy(){return String(y()).slice(2)},yyyy:function yyyy(){return pad(y(),4)},h:function h(){return _H()%12||12},hh:function hh(){return pad(_H()%12||12)},H:function H(){return _H()},HH:function HH(){return pad(_H())},M:function M(){return _M()},MM:function MM(){return pad(_M())},s:function s(){return _s()},ss:function ss(){return pad(_s())},l:function l(){return pad(_L(),3)},L:function L(){return pad(Math.floor(_L()/10))},t:function t(){return _H()<12?dateFormat.i18n.timeNames[0]:dateFormat.i18n.timeNames[1]},tt:function tt(){return _H()<12?dateFormat.i18n.timeNames[2]:dateFormat.i18n.timeNames[3]},T:function T(){return _H()<12?dateFormat.i18n.timeNames[4]:dateFormat.i18n.timeNames[5]},TT:function TT(){return _H()<12?dateFormat.i18n.timeNames[6]:dateFormat.i18n.timeNames[7]},Z:function Z(){return gmt?\"GMT\":utc?\"UTC\":(String(date).match(timezone)||[\"\"]).pop().replace(timezoneClip,\"\").replace(/GMT\\+0000/g,\"UTC\")},o:function o(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60)*100+Math.abs(_o())%60,4)},p:function p(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60),2)+\":\"+pad(Math.floor(Math.abs(_o())%60),2)},S:function S(){return[\"th\",\"st\",\"nd\",\"rd\"][_d()%10>3?0:(_d()%100-_d()%10!=10)*_d()%10]},W:function W(){return _W()},WW:function WW(){return pad(_W())},N:function N(){return _N()}};return mask.replace(token,function(match){if(match in flags){return flags[match]()}return match.slice(1,match.length-1)})}}();dateFormat.masks={default:\"ddd mmm dd yyyy HH:MM:ss\",shortDate:\"m/d/yy\",paddedShortDate:\"mm/dd/yyyy\",mediumDate:\"mmm d, yyyy\",longDate:\"mmmm d, yyyy\",fullDate:\"dddd, mmmm d, yyyy\",shortTime:\"h:MM TT\",mediumTime:\"h:MM:ss TT\",longTime:\"h:MM:ss TT Z\",isoDate:\"yyyy-mm-dd\",isoTime:\"HH:MM:ss\",isoDateTime:\"yyyy-mm-dd'T'HH:MM:sso\",isoUtcDateTime:\"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",expiresHeaderFormat:\"ddd, dd mmm yyyy HH:MM:ss Z\"};dateFormat.i18n={dayNames:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],monthNames:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],timeNames:[\"a\",\"p\",\"am\",\"pm\",\"A\",\"P\",\"AM\",\"PM\"]};var pad=function pad(val,len){val=String(val);len=len||2;while(val.length<len){val=\"0\"+val}return val};var getDayName=function getDayName(_ref){var y=_ref.y,m=_ref.m,d=_ref.d,_=_ref._,dayName=_ref.dayName,_ref$short=_ref[\"short\"],_short=_ref$short===void 0?false:_ref$short;var today=new Date;var yesterday=new Date;yesterday.setDate(yesterday[_+\"Date\"]()-1);var tomorrow=new Date;tomorrow.setDate(tomorrow[_+\"Date\"]()+1);var today_d=function today_d(){return today[_+\"Date\"]()};var today_m=function today_m(){return today[_+\"Month\"]()};var today_y=function today_y(){return today[_+\"FullYear\"]()};var yesterday_d=function yesterday_d(){return yesterday[_+\"Date\"]()};var yesterday_m=function yesterday_m(){return yesterday[_+\"Month\"]()};var yesterday_y=function yesterday_y(){return yesterday[_+\"FullYear\"]()};var tomorrow_d=function tomorrow_d(){return tomorrow[_+\"Date\"]()};var tomorrow_m=function tomorrow_m(){return tomorrow[_+\"Month\"]()};var tomorrow_y=function tomorrow_y(){return tomorrow[_+\"FullYear\"]()};if(today_y()===y&&today_m()===m&&today_d()===d){return _short?\"Tdy\":\"Today\"}else if(yesterday_y()===y&&yesterday_m()===m&&yesterday_d()===d){return _short?\"Ysd\":\"Yesterday\"}else if(tomorrow_y()===y&&tomorrow_m()===m&&tomorrow_d()===d){return _short?\"Tmw\":\"Tomorrow\"}return dayName};var getWeek=function getWeek(date){var targetThursday=new Date(date.getFullYear(),date.getMonth(),date.getDate());targetThursday.setDate(targetThursday.getDate()-(targetThursday.getDay()+6)%7+3);var firstThursday=new Date(targetThursday.getFullYear(),0,4);firstThursday.setDate(firstThursday.getDate()-(firstThursday.getDay()+6)%7+3);var ds=targetThursday.getTimezoneOffset()-firstThursday.getTimezoneOffset();targetThursday.setHours(targetThursday.getHours()-ds);var weekDiff=(targetThursday-firstThursday)/(864e5*7);return 1+Math.floor(weekDiff)};var getDayOfWeek=function getDayOfWeek(date){var dow=date.getDay();if(dow===0){dow=7}return dow};var kindOf=function kindOf(val){if(val===null){return\"null\"}if(val===undefined){return\"undefined\"}if(_typeof(val)!==\"object\"){return _typeof(val)}if(Array.isArray(val)){return\"array\"}return{}.toString.call(val).slice(8,-1).toLowerCase()};if(typeof define===\"function\"&&define.amd){define(function(){return dateFormat})}else if((typeof exports===\"undefined\"?\"undefined\":_typeof(exports))===\"object\"){module.exports=dateFormat}else{global.dateFormat=dateFormat}})(void 0);","<script lang=\"ts\">\n  import type { Snippet } from '@ranna-go/ranna-ts';\n  import { createEventDispatcher } from 'svelte';\n  import { languageColor } from '../colors';\n  import dateformat from 'dateformat';\n\n  export let snippet: Snippet;\n\n  const dispatch = createEventDispatcher();\n\n  function onDelete(e: Event) {\n    e.stopPropagation();\n    dispatch('delete');\n  }\n\n  function onClick() {\n    dispatch('click');\n  }\n</script>\n\n<main>\n  <div class=\"container\" on:click={onClick}>\n    <button class=\"btn-delete\" on:click={onDelete}>🗑</button>\n    <h3>{snippet.ident}</h3>\n    <p class=\"language\">\n      <span\n        style={`background-color: ${languageColor(snippet.language)}`}\n      />{snippet.language}\n    </p>\n    <p class=\"smol\">{dateformat(snippet.timestamp)}</p>\n    <p class=\"smol\">{snippet.id}</p>\n  </div>\n</main>\n\n<style lang=\"scss\">\n  @import '../styles/mixins.scss';\n\n  .container {\n    background-color: #001419;\n    padding: 10px;\n    border-radius: 10px;\n    margin: 10px;\n    max-width: 1100px / 3 - 20px * 3;\n    width: calc(100vw / 3 - 20px * 3);\n    cursor: pointer;\n    transition: all 0.2s ease;\n\n    &:hover {\n      @include shadow;\n      transform: scale(1.03);\n\n      .btn-delete {\n        opacity: 1;\n        pointer-events: all;\n      }\n    }\n\n    @media (max-width: 900px) {\n      min-width: calc(100% - 20px);\n    }\n\n    h3 {\n      margin-bottom: 5px;\n    }\n\n    p {\n      margin-bottom: 5px;\n      &:last-child {\n        margin-bottom: 0px;\n      }\n    }\n\n    .btn-delete {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      opacity: 0;\n      pointer-events: none;\n      background-color: #ed4245;\n\n      &:hover {\n        background-color: darken(#ed4245, 15);\n      }\n    }\n\n    .language {\n      display: flex;\n      align-items: center;\n      text-transform: capitalize;\n      > span {\n        height: 1em;\n        width: 1em;\n        border-radius: 100%;\n        margin-right: 10px;\n      }\n    }\n\n    .smol {\n      font-size: 12px;\n      opacity: 0.5;\n      margin-bottom: 0px;\n    }\n  }\n</style>\n","export function copyToClipboard(v) {\n    const inpt = document.createElement('input');\n    inpt.style.position = 'absolute';\n    inpt.style.height = '0';\n    inpt.style.opacity = '0';\n    document.body.appendChild(inpt);\n    inpt.value = v;\n    inpt.select();\n    inpt.setSelectionRange(0, v.length);\n    const success = document.execCommand('copy');\n    document.body.removeChild(inpt);\n    return success;\n}\n","<script lang=\"ts\">\n  import { apiKey } from '../store';\n  import { copyToClipboard } from '../util';\n</script>\n\n<main>\n  <div class=\"apikey\">\n    <h3>API Key</h3>\n    <p>\n      This key is used to link newly created snippets to your account and also to list and delete created snippets.<br/>\n      You need to input this key in the ranna app settings to link created snippets to this account.\n    </p>\n    <div class=\"keybox\">\n      <input type=\"password\" readonly value={$apiKey} />\n      <button on:click={() => copyToClipboard($apiKey)}>📋</button>\n    </div>\n  </div>\n</main>\n\n<style lang=\"scss\">\n  @import '../styles/mixins.scss';\n\n  .apikey {\n    padding: 10px 15px;\n    background-color: #001419;\n    border-radius: 10px;\n    margin-bottom: 30px;\n    @include shadow;\n\n    > .keybox {\n      display: flex;\n      white-space: nowrap;\n\n      > input {\n        width: 100%;\n        margin-right: 15px;\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { masterKey } from '../store';\n  import { copyToClipboard } from '../util';\n</script>\n\n<main>\n  {#if $masterKey}\n    <div class=\"masterkey\">\n      <div class=\"header\">\n        <h3>Master Key</h3>\n        <button on:click={() => masterKey.set('')}>❌</button>\n      </div>\n      <p>\n        You will need this master key to login later. Please store it somewhere\n        save!<br />\n        <strong>This token will not be shown again later!</strong>\n      </p>\n      <div class=\"keybox\">\n        <input type=\"password\" readonly value={$masterKey} />\n        <button on:click={() => copyToClipboard($masterKey)}>📋</button>\n      </div>\n    </div>\n  {/if}\n</main>\n\n<style lang=\"scss\">\n  @import '../styles/mixins.scss';\n\n  .masterkey {\n    padding: 10px 15px;\n    background-color: #ed4245;\n    border-radius: 10px;\n    margin-bottom: 30px;\n    @include shadow;\n\n    > .header {\n      display: flex;\n      justify-content: space-between;\n    }\n\n    > .keybox {\n      display: flex;\n      white-space: nowrap;\n\n      > input {\n        width: 100%;\n        margin-right: 15px;\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { client } from '../client';\n  import Snippet from '../components/Snippet.svelte';\n  import type { Snippet as SnippetModel } from '@ranna-go/ranna-ts';\n\n  import ApiKey from './ApiKey.svelte';\n  import MasterKey from './MasterKey.svelte';\n\n  let linksPromise: Promise<SnippetModel[]>;\n\n  fetchSnippets();\n\n  function fetchSnippets() {\n    linksPromise = client.list();\n  }\n\n  async function onDelete(s: SnippetModel) {\n    await client.delete(s.ident);\n    fetchSnippets();\n  }\n\n  function onSnippetClick(s: SnippetModel) {\n    window.open(`${process.env.rannaAppLocation}?s=${s.ident}`);\n  }\n</script>\n\n<main>\n  <div class=\"content-wrapper\">\n    <MasterKey />\n    <ApiKey />\n    {#if linksPromise}\n      {#await linksPromise}\n        <p>Fetching snippets ...</p>\n      {:then snippets}\n        <div class=\"snippets-container\">\n          {#each snippets as snippet}\n            <Snippet\n              {snippet}\n              on:delete={() => onDelete(snippet)}\n              on:click={() => onSnippetClick(snippet)}\n            />\n          {/each}\n        </div>\n      {/await}\n    {/if}\n  </div>\n</main>\n\n<style lang=\"scss\">\n  .snippets-container {\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n\n    @media (max-width: 900px) {\n      flex-direction: column;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { apiKey } from './store';\n  import Login from './components/Login.svelte';\n  import Home from './components/Home.svelte';\n</script>\n\n<main>\n  {#if !$apiKey}\n    <Login />\n  {:else}\n    <Home />\n  {/if}\n</main>\n\n<style lang=\"scss\">\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","handle_promise","promise","info","token","index","key","resolved","child_ctx","undefined","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","masterKey","apiKey","defineProperty","exports","APIError","res","super","_code","code","_error","_context","ResponseError","status","_response","response","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","result","done","apply","endpoint","method","path","body","headers","Headers","auth","userAgent","window","fetch","version","JSON","stringify","credentials","ok","json","errors_1","_a","clientOptions","defaultOptions","Client","request_1","RequestClient","request","req","bypassCache","SnippetsClient","username","masterkey","err","ident","snippet","enumerable","get","client_1","snippets_1","LocalStorageUtil","val","localStorage","setItem","def","valStr","getItem","parse","removeItem","client","selected","remember","onLogin","exchangeAPIToken","onRegister","createAccount","languageColors","golang","go","python3","python","py","rust","openjdk-11","java","javascript","js","deno","typescript","ts","elixir","ash","bash","sh","brainfuck","cpp","c++","mono","c#","csharp","dotnet-script","csx","php","ruby","haskell","dart","pascal","fpc","languageColor","lang","toLowerCase","_typeof","Symbol","iterator","constructor","prototype","global","timezone","timezoneClip","arguments","dateFormat","date","mask","utc","gmt","kindOf","test","Date","isNaN","TypeError","maskSlice","String","masks","_","_d","D","_m","y","_H","_M","_s","_L","_o","getTimezoneOffset","_W","getWeek","flags","dd","pad","ddd","i18n","dayNames","DDD","getDayName","dayName","short","dddd","DDDD","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","H","HH","M","MM","ss","L","Math","floor","t","timeNames","tt","T","TT","Z","match","replace","abs","S","W","WW","N","getDayOfWeek","default","shortDate","paddedShortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","len","_ref","_ref$short","_short","today","yesterday","setDate","tomorrow","targetThursday","getFullYear","getMonth","getDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","dow","isArray","toString","module","language","dateformat","timestamp","id","dispatch","stopPropagation","copyToClipboard","v","inpt","style","position","height","opacity","select","setSelectionRange","success","execCommand","$apiKey","$masterKey","iterations","linksPromise","fetchSnippets","list","onDelete","onSnippetClick","open"],"mappings":"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"}